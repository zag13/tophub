version: "3.8"

name: tophub

services:
  ### client #############################################
  client-dev:
    depends_on:
      - server-dev
    build:
      context: ./
      dockerfile: deploy/build/dockerfile-client-dev
    container_name: client-dev
    hostname: client-dev
    networks:
      - topnet
    ports:
     - 5173:5173
    volumes:
      - ./client:/app
    command: npm run dev

  ### cli ################################################
  cli-dev:
    depends_on:
      - mysql
    build:
      context: ./
      dockerfile: deploy/build/dockerfile-cli-dev
    container_name: cli-dev
    hostname: cli-dev
    ports:
      - "40000:40000"
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_PTRACE
    networks:
      - topnet

  ### server #############################################
  server-dev:
    depends_on:
      - mysql
    build:
      context: ./
      dockerfile: deploy/build/dockerfile-server-dev
    container_name: server-dev
    hostname: server-dev
    ports:
      - "8080:8080"
      - "48080:48080"
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_PTRACE
    networks:
      - topnet

  ### MySQL ##############################################
  mysql:
    image: mysql:8.0.34
    container_name: tophub_mysql
    hostname: tophub_mysql
    networks:
      - topnet
    ports:
      - 33307:3306
    environment:
      - TZ=Asia/Shanghai
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD:-root}
      - MYSQL_USER=${MYSQL_PASSWORD:-default}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-secret}
    volumes:
      - mysql:/var/lib/mysql
      - ./deploy/build/mysql/docker-entrypoint-initdb.d/init.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  mysql:
    driver: local

networks:
  topnet:
    driver: bridge