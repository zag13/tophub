// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"tophub/app/interface/internal/conf"
	"tophub/app/interface/internal/server"
	"tophub/app/interface/internal/service"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(confServer *conf.Server, data *conf.Data, logger log.Logger) (*kratos.App, func(), error) {
	db := service.NewDB(data)
	client := service.NewRedisDB(data)
	interfaceService, cleanup, err := service.NewInterfaceService(logger, db, client)
	if err != nil {
		return nil, nil, err
	}
	grpcServer := server.NewGRPCServer(confServer, interfaceService, logger)
	httpServer := server.NewHTTPServer(confServer, interfaceService, logger)
	app := newApp(logger, grpcServer, httpServer)
	return app, func() {
		cleanup()
	}, nil
}
